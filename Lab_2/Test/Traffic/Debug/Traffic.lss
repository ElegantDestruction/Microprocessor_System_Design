
Traffic.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001a2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000002  00800060  000001a2  00000236  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000004  00800062  00800062  00000238  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000238  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000268  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000020  00000000  00000000  000002a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000006c0  00000000  00000000  000002c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000004e0  00000000  00000000  00000988  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000002d1  00000000  00000000  00000e68  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000024  00000000  00000000  0000113c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000314  00000000  00000000  00001160  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000001ee  00000000  00000000  00001474  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000040  00000000  00000000  00001662  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	13 c0       	rjmp	.+38     	; 0x28 <__ctors_end>
   2:	2d c0       	rjmp	.+90     	; 0x5e <__bad_interrupt>
   4:	2c c0       	rjmp	.+88     	; 0x5e <__bad_interrupt>
   6:	2b c0       	rjmp	.+86     	; 0x5e <__bad_interrupt>
   8:	2a c0       	rjmp	.+84     	; 0x5e <__bad_interrupt>
   a:	29 c0       	rjmp	.+82     	; 0x5e <__bad_interrupt>
   c:	28 c0       	rjmp	.+80     	; 0x5e <__bad_interrupt>
   e:	27 c0       	rjmp	.+78     	; 0x5e <__bad_interrupt>
  10:	26 c0       	rjmp	.+76     	; 0x5e <__bad_interrupt>
  12:	25 c0       	rjmp	.+74     	; 0x5e <__bad_interrupt>
  14:	24 c0       	rjmp	.+72     	; 0x5e <__bad_interrupt>
  16:	23 c0       	rjmp	.+70     	; 0x5e <__bad_interrupt>
  18:	22 c0       	rjmp	.+68     	; 0x5e <__bad_interrupt>
  1a:	21 c0       	rjmp	.+66     	; 0x5e <__bad_interrupt>
  1c:	20 c0       	rjmp	.+64     	; 0x5e <__bad_interrupt>
  1e:	1f c0       	rjmp	.+62     	; 0x5e <__bad_interrupt>
  20:	1e c0       	rjmp	.+60     	; 0x5e <__bad_interrupt>

00000022 <__trampolines_end>:
  22:	0c 14       	cp	r0, r12
  24:	04 21       	and	r16, r4
  26:	22 20       	and	r2, r2

00000028 <__ctors_end>:
  28:	11 24       	eor	r1, r1
  2a:	1f be       	out	0x3f, r1	; 63
  2c:	cf e5       	ldi	r28, 0x5F	; 95
  2e:	d2 e0       	ldi	r29, 0x02	; 2
  30:	de bf       	out	0x3e, r29	; 62
  32:	cd bf       	out	0x3d, r28	; 61

00000034 <__do_copy_data>:
  34:	10 e0       	ldi	r17, 0x00	; 0
  36:	a0 e6       	ldi	r26, 0x60	; 96
  38:	b0 e0       	ldi	r27, 0x00	; 0
  3a:	e2 ea       	ldi	r30, 0xA2	; 162
  3c:	f1 e0       	ldi	r31, 0x01	; 1
  3e:	02 c0       	rjmp	.+4      	; 0x44 <__SREG__+0x5>
  40:	05 90       	lpm	r0, Z+
  42:	0d 92       	st	X+, r0
  44:	a2 36       	cpi	r26, 0x62	; 98
  46:	b1 07       	cpc	r27, r17
  48:	d9 f7       	brne	.-10     	; 0x40 <__SREG__+0x1>

0000004a <__do_clear_bss>:
  4a:	20 e0       	ldi	r18, 0x00	; 0
  4c:	a2 e6       	ldi	r26, 0x62	; 98
  4e:	b0 e0       	ldi	r27, 0x00	; 0
  50:	01 c0       	rjmp	.+2      	; 0x54 <.do_clear_bss_start>

00000052 <.do_clear_bss_loop>:
  52:	1d 92       	st	X+, r1

00000054 <.do_clear_bss_start>:
  54:	a6 36       	cpi	r26, 0x66	; 102
  56:	b2 07       	cpc	r27, r18
  58:	e1 f7       	brne	.-8      	; 0x52 <.do_clear_bss_loop>
  5a:	02 d0       	rcall	.+4      	; 0x60 <main>
  5c:	a0 c0       	rjmp	.+320    	; 0x19e <_exit>

0000005e <__bad_interrupt>:
  5e:	d0 cf       	rjmp	.-96     	; 0x0 <__vectors>

00000060 <main>:



int main (void)
{
	DDRB=0xff;
  60:	8f ef       	ldi	r24, 0xFF	; 255
  62:	87 bb       	out	0x17, r24	; 23
	PORTB=~led;  //inverted due to low enabled LEDs on STK-600 board
  64:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__data_start>
  68:	80 95       	com	r24
  6a:	88 bb       	out	0x18, r24	; 24
	{
		//read traffic lights data from memory location that stores
		//the first byte in tab array
		//see pgmspace.h for the definition of pgm_read_byte
		
		led=pgm_read_byte(&tab[0]);
  6c:	22 e2       	ldi	r18, 0x22	; 34
  6e:	30 e0       	ldi	r19, 0x00	; 0
				PORTB=~led;
				
				_delay_ms(400);
			}
		}
		led=pgm_read_byte(&tab[3]);
  70:	85 e2       	ldi	r24, 0x25	; 37
  72:	90 e0       	ldi	r25, 0x00	; 0
	{
		//read traffic lights data from memory location that stores
		//the first byte in tab array
		//see pgmspace.h for the definition of pgm_read_byte
		
		led=pgm_read_byte(&tab[0]);
  74:	f9 01       	movw	r30, r18
  76:	44 91       	lpm	r20, Z
  78:	64 2f       	mov	r22, r20
  7a:	70 e0       	ldi	r23, 0x00	; 0
  7c:	70 93 61 00 	sts	0x0061, r23	; 0x800061 <__data_start+0x1>
  80:	60 93 60 00 	sts	0x0060, r22	; 0x800060 <__data_start>
		PORTB=~led;
  84:	40 95       	com	r20
  86:	48 bb       	out	0x18, r20	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  88:	ff ef       	ldi	r31, 0xFF	; 255
  8a:	47 ea       	ldi	r20, 0xA7	; 167
  8c:	51 e6       	ldi	r21, 0x61	; 97
  8e:	f1 50       	subi	r31, 0x01	; 1
  90:	40 40       	sbci	r20, 0x00	; 0
  92:	50 40       	sbci	r21, 0x00	; 0
  94:	e1 f7       	brne	.-8      	; 0x8e <main+0x2e>
  96:	00 c0       	rjmp	.+0      	; 0x98 <main+0x38>
  98:	00 00       	nop
		
		_delay_ms(4000);
		for(i=0;i<5;i++)
  9a:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <i+0x1>
  9e:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <i>
		{
			for (j=0;j<2;j++)
  a2:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <__data_end+0x1>
  a6:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <__data_end>
  aa:	e0 e0       	ldi	r30, 0x00	; 0
  ac:	f0 e0       	ldi	r31, 0x00	; 0
			{
				led=pgm_read_byte(&tab[j+1]);
  ae:	ed 5d       	subi	r30, 0xDD	; 221
  b0:	ff 4f       	sbci	r31, 0xFF	; 255
  b2:	e4 91       	lpm	r30, Z
  b4:	4e 2f       	mov	r20, r30
  b6:	50 e0       	ldi	r21, 0x00	; 0
  b8:	50 93 61 00 	sts	0x0061, r21	; 0x800061 <__data_start+0x1>
  bc:	40 93 60 00 	sts	0x0060, r20	; 0x800060 <__data_start>
				PORTB=~led;
  c0:	e0 95       	com	r30
  c2:	e8 bb       	out	0x18, r30	; 24
  c4:	6f ef       	ldi	r22, 0xFF	; 255
  c6:	e3 ec       	ldi	r30, 0xC3	; 195
  c8:	f9 e0       	ldi	r31, 0x09	; 9
  ca:	61 50       	subi	r22, 0x01	; 1
  cc:	e0 40       	sbci	r30, 0x00	; 0
  ce:	f0 40       	sbci	r31, 0x00	; 0
  d0:	e1 f7       	brne	.-8      	; 0xca <main+0x6a>
  d2:	00 c0       	rjmp	.+0      	; 0xd4 <main+0x74>
  d4:	00 00       	nop
		PORTB=~led;
		
		_delay_ms(4000);
		for(i=0;i<5;i++)
		{
			for (j=0;j<2;j++)
  d6:	e0 91 62 00 	lds	r30, 0x0062	; 0x800062 <__data_end>
  da:	f0 91 63 00 	lds	r31, 0x0063	; 0x800063 <__data_end+0x1>
  de:	31 96       	adiw	r30, 0x01	; 1
  e0:	f0 93 63 00 	sts	0x0063, r31	; 0x800063 <__data_end+0x1>
  e4:	e0 93 62 00 	sts	0x0062, r30	; 0x800062 <__data_end>
  e8:	e2 30       	cpi	r30, 0x02	; 2
  ea:	f1 05       	cpc	r31, r1
  ec:	04 f3       	brlt	.-64     	; 0xae <main+0x4e>
		
		led=pgm_read_byte(&tab[0]);
		PORTB=~led;
		
		_delay_ms(4000);
		for(i=0;i<5;i++)
  ee:	40 91 64 00 	lds	r20, 0x0064	; 0x800064 <i>
  f2:	50 91 65 00 	lds	r21, 0x0065	; 0x800065 <i+0x1>
  f6:	4f 5f       	subi	r20, 0xFF	; 255
  f8:	5f 4f       	sbci	r21, 0xFF	; 255
  fa:	50 93 65 00 	sts	0x0065, r21	; 0x800065 <i+0x1>
  fe:	40 93 64 00 	sts	0x0064, r20	; 0x800064 <i>
 102:	45 30       	cpi	r20, 0x05	; 5
 104:	51 05       	cpc	r21, r1
 106:	6c f2       	brlt	.-102    	; 0xa2 <main+0x42>
				PORTB=~led;
				
				_delay_ms(400);
			}
		}
		led=pgm_read_byte(&tab[3]);
 108:	fc 01       	movw	r30, r24
 10a:	44 91       	lpm	r20, Z
 10c:	64 2f       	mov	r22, r20
 10e:	70 e0       	ldi	r23, 0x00	; 0
 110:	70 93 61 00 	sts	0x0061, r23	; 0x800061 <__data_start+0x1>
 114:	60 93 60 00 	sts	0x0060, r22	; 0x800060 <__data_start>
		PORTB=~led;
 118:	40 95       	com	r20
 11a:	48 bb       	out	0x18, r20	; 24
 11c:	ff ef       	ldi	r31, 0xFF	; 255
 11e:	47 ea       	ldi	r20, 0xA7	; 167
 120:	51 e6       	ldi	r21, 0x61	; 97
 122:	f1 50       	subi	r31, 0x01	; 1
 124:	40 40       	sbci	r20, 0x00	; 0
 126:	50 40       	sbci	r21, 0x00	; 0
 128:	e1 f7       	brne	.-8      	; 0x122 <main+0xc2>
 12a:	00 c0       	rjmp	.+0      	; 0x12c <main+0xcc>
 12c:	00 00       	nop
		
		_delay_ms(4000);
		for(i=0;i<5;i++)
 12e:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <i+0x1>
 132:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <i>
		{
			for (j=0;j<2;j++)
 136:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <__data_end+0x1>
 13a:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <__data_end>
 13e:	e0 e0       	ldi	r30, 0x00	; 0
 140:	f0 e0       	ldi	r31, 0x00	; 0
			{
				led=pgm_read_byte(&tab[j+4]);
 142:	ea 5d       	subi	r30, 0xDA	; 218
 144:	ff 4f       	sbci	r31, 0xFF	; 255
 146:	e4 91       	lpm	r30, Z
 148:	4e 2f       	mov	r20, r30
 14a:	50 e0       	ldi	r21, 0x00	; 0
 14c:	50 93 61 00 	sts	0x0061, r21	; 0x800061 <__data_start+0x1>
 150:	40 93 60 00 	sts	0x0060, r20	; 0x800060 <__data_start>
				PORTB=~led;
 154:	e0 95       	com	r30
 156:	e8 bb       	out	0x18, r30	; 24
 158:	6f ef       	ldi	r22, 0xFF	; 255
 15a:	e3 ec       	ldi	r30, 0xC3	; 195
 15c:	f9 e0       	ldi	r31, 0x09	; 9
 15e:	61 50       	subi	r22, 0x01	; 1
 160:	e0 40       	sbci	r30, 0x00	; 0
 162:	f0 40       	sbci	r31, 0x00	; 0
 164:	e1 f7       	brne	.-8      	; 0x15e <main+0xfe>
 166:	00 c0       	rjmp	.+0      	; 0x168 <main+0x108>
 168:	00 00       	nop
		PORTB=~led;
		
		_delay_ms(4000);
		for(i=0;i<5;i++)
		{
			for (j=0;j<2;j++)
 16a:	e0 91 62 00 	lds	r30, 0x0062	; 0x800062 <__data_end>
 16e:	f0 91 63 00 	lds	r31, 0x0063	; 0x800063 <__data_end+0x1>
 172:	31 96       	adiw	r30, 0x01	; 1
 174:	f0 93 63 00 	sts	0x0063, r31	; 0x800063 <__data_end+0x1>
 178:	e0 93 62 00 	sts	0x0062, r30	; 0x800062 <__data_end>
 17c:	e2 30       	cpi	r30, 0x02	; 2
 17e:	f1 05       	cpc	r31, r1
 180:	04 f3       	brlt	.-64     	; 0x142 <main+0xe2>
		}
		led=pgm_read_byte(&tab[3]);
		PORTB=~led;
		
		_delay_ms(4000);
		for(i=0;i<5;i++)
 182:	40 91 64 00 	lds	r20, 0x0064	; 0x800064 <i>
 186:	50 91 65 00 	lds	r21, 0x0065	; 0x800065 <i+0x1>
 18a:	4f 5f       	subi	r20, 0xFF	; 255
 18c:	5f 4f       	sbci	r21, 0xFF	; 255
 18e:	50 93 65 00 	sts	0x0065, r21	; 0x800065 <i+0x1>
 192:	40 93 64 00 	sts	0x0064, r20	; 0x800064 <i>
 196:	45 30       	cpi	r20, 0x05	; 5
 198:	51 05       	cpc	r21, r1
 19a:	6c f2       	brlt	.-102    	; 0x136 <main+0xd6>
 19c:	6b cf       	rjmp	.-298    	; 0x74 <main+0x14>

0000019e <_exit>:
 19e:	f8 94       	cli

000001a0 <__stop_program>:
 1a0:	ff cf       	rjmp	.-2      	; 0x1a0 <__stop_program>
