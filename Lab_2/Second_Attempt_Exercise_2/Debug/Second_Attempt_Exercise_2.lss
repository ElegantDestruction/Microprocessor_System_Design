
Second_Attempt_Exercise_2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000019a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000002  00800060  0000019a  0000022e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000004  00800062  00800062  00000230  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000230  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000260  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000020  00000000  00000000  000002a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000006c4  00000000  00000000  000002c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000004d4  00000000  00000000  00000984  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000002c8  00000000  00000000  00000e58  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000024  00000000  00000000  00001120  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000031e  00000000  00000000  00001144  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000025e  00000000  00000000  00001462  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000010  00000000  00000000  000016c0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	13 c0       	rjmp	.+38     	; 0x28 <__ctors_end>
   2:	2d c0       	rjmp	.+90     	; 0x5e <__bad_interrupt>
   4:	2c c0       	rjmp	.+88     	; 0x5e <__bad_interrupt>
   6:	2b c0       	rjmp	.+86     	; 0x5e <__bad_interrupt>
   8:	2a c0       	rjmp	.+84     	; 0x5e <__bad_interrupt>
   a:	29 c0       	rjmp	.+82     	; 0x5e <__bad_interrupt>
   c:	28 c0       	rjmp	.+80     	; 0x5e <__bad_interrupt>
   e:	27 c0       	rjmp	.+78     	; 0x5e <__bad_interrupt>
  10:	26 c0       	rjmp	.+76     	; 0x5e <__bad_interrupt>
  12:	25 c0       	rjmp	.+74     	; 0x5e <__bad_interrupt>
  14:	24 c0       	rjmp	.+72     	; 0x5e <__bad_interrupt>
  16:	23 c0       	rjmp	.+70     	; 0x5e <__bad_interrupt>
  18:	22 c0       	rjmp	.+68     	; 0x5e <__bad_interrupt>
  1a:	21 c0       	rjmp	.+66     	; 0x5e <__bad_interrupt>
  1c:	20 c0       	rjmp	.+64     	; 0x5e <__bad_interrupt>
  1e:	1f c0       	rjmp	.+62     	; 0x5e <__bad_interrupt>
  20:	1e c0       	rjmp	.+60     	; 0x5e <__bad_interrupt>

00000022 <__trampolines_end>:
  22:	0c 14       	cp	r0, r12
  24:	04 21       	and	r16, r4
  26:	22 20       	and	r2, r2

00000028 <__ctors_end>:
  28:	11 24       	eor	r1, r1
  2a:	1f be       	out	0x3f, r1	; 63
  2c:	cf e5       	ldi	r28, 0x5F	; 95
  2e:	d2 e0       	ldi	r29, 0x02	; 2
  30:	de bf       	out	0x3e, r29	; 62
  32:	cd bf       	out	0x3d, r28	; 61

00000034 <__do_copy_data>:
  34:	10 e0       	ldi	r17, 0x00	; 0
  36:	a0 e6       	ldi	r26, 0x60	; 96
  38:	b0 e0       	ldi	r27, 0x00	; 0
  3a:	ea e9       	ldi	r30, 0x9A	; 154
  3c:	f1 e0       	ldi	r31, 0x01	; 1
  3e:	02 c0       	rjmp	.+4      	; 0x44 <__SREG__+0x5>
  40:	05 90       	lpm	r0, Z+
  42:	0d 92       	st	X+, r0
  44:	a2 36       	cpi	r26, 0x62	; 98
  46:	b1 07       	cpc	r27, r17
  48:	d9 f7       	brne	.-10     	; 0x40 <__SREG__+0x1>

0000004a <__do_clear_bss>:
  4a:	20 e0       	ldi	r18, 0x00	; 0
  4c:	a2 e6       	ldi	r26, 0x62	; 98
  4e:	b0 e0       	ldi	r27, 0x00	; 0
  50:	01 c0       	rjmp	.+2      	; 0x54 <.do_clear_bss_start>

00000052 <.do_clear_bss_loop>:
  52:	1d 92       	st	X+, r1

00000054 <.do_clear_bss_start>:
  54:	a6 36       	cpi	r26, 0x66	; 102
  56:	b2 07       	cpc	r27, r18
  58:	e1 f7       	brne	.-8      	; 0x52 <.do_clear_bss_loop>
  5a:	02 d0       	rcall	.+4      	; 0x60 <main>
  5c:	9c c0       	rjmp	.+312    	; 0x196 <_exit>

0000005e <__bad_interrupt>:
  5e:	d0 cf       	rjmp	.-96     	; 0x0 <__vectors>

00000060 <main>:


int main(void)
{
	//Declare output ports and LED assignments
	DDRB = 0xff;
  60:	8f ef       	ldi	r24, 0xFF	; 255
  62:	87 bb       	out	0x17, r24	; 23
	PORTB = ~led;
  64:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__data_start>
  68:	80 95       	com	r24
  6a:	88 bb       	out	0x18, r24	; 24
	
	//Begin while loop
    while (1) {
		
		//Initial read of array values
		led = pgm_read_byte(&tab[0]);
  6c:	e2 e2       	ldi	r30, 0x22	; 34
  6e:	f0 e0       	ldi	r31, 0x00	; 0
  70:	e4 91       	lpm	r30, Z
  72:	8e 2f       	mov	r24, r30
  74:	90 e0       	ldi	r25, 0x00	; 0
  76:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__data_start+0x1>
  7a:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__data_start>
		PORTB = ~led;
  7e:	e0 95       	com	r30
  80:	e8 bb       	out	0x18, r30	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  82:	2f ef       	ldi	r18, 0xFF	; 255
  84:	87 ea       	ldi	r24, 0xA7	; 167
  86:	91 e6       	ldi	r25, 0x61	; 97
  88:	21 50       	subi	r18, 0x01	; 1
  8a:	80 40       	sbci	r24, 0x00	; 0
  8c:	90 40       	sbci	r25, 0x00	; 0
  8e:	e1 f7       	brne	.-8      	; 0x88 <main+0x28>
  90:	00 c0       	rjmp	.+0      	; 0x92 <main+0x32>
  92:	00 00       	nop
		
		//delay 4 seconds
		_delay_ms(4000);
		
		//Loop through light changes 5 times
		for(i = 0; i < 5; i++){
  94:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <i+0x1>
  98:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <i>
			
			//Loop to read second and third light values tab[1-2] and display
			for (j = 0; j < 2; j++){
  9c:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <__data_end+0x1>
  a0:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <__data_end>
  a4:	e0 e0       	ldi	r30, 0x00	; 0
  a6:	f0 e0       	ldi	r31, 0x00	; 0
				led = pgm_read_byte(&tab[j+1]);
  a8:	ed 5d       	subi	r30, 0xDD	; 221
  aa:	ff 4f       	sbci	r31, 0xFF	; 255
  ac:	e4 91       	lpm	r30, Z
  ae:	8e 2f       	mov	r24, r30
  b0:	90 e0       	ldi	r25, 0x00	; 0
  b2:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__data_start+0x1>
  b6:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__data_start>
				PORTB = ~led;
  ba:	e0 95       	com	r30
  bc:	e8 bb       	out	0x18, r30	; 24
  be:	2f ef       	ldi	r18, 0xFF	; 255
  c0:	83 ec       	ldi	r24, 0xC3	; 195
  c2:	99 e0       	ldi	r25, 0x09	; 9
  c4:	21 50       	subi	r18, 0x01	; 1
  c6:	80 40       	sbci	r24, 0x00	; 0
  c8:	90 40       	sbci	r25, 0x00	; 0
  ca:	e1 f7       	brne	.-8      	; 0xc4 <main+0x64>
  cc:	00 c0       	rjmp	.+0      	; 0xce <main+0x6e>
  ce:	00 00       	nop
		
		//Loop through light changes 5 times
		for(i = 0; i < 5; i++){
			
			//Loop to read second and third light values tab[1-2] and display
			for (j = 0; j < 2; j++){
  d0:	e0 91 62 00 	lds	r30, 0x0062	; 0x800062 <__data_end>
  d4:	f0 91 63 00 	lds	r31, 0x0063	; 0x800063 <__data_end+0x1>
  d8:	31 96       	adiw	r30, 0x01	; 1
  da:	f0 93 63 00 	sts	0x0063, r31	; 0x800063 <__data_end+0x1>
  de:	e0 93 62 00 	sts	0x0062, r30	; 0x800062 <__data_end>
  e2:	e2 30       	cpi	r30, 0x02	; 2
  e4:	f1 05       	cpc	r31, r1
  e6:	04 f3       	brlt	.-64     	; 0xa8 <main+0x48>
		
		//delay 4 seconds
		_delay_ms(4000);
		
		//Loop through light changes 5 times
		for(i = 0; i < 5; i++){
  e8:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <i>
  ec:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <i+0x1>
  f0:	01 96       	adiw	r24, 0x01	; 1
  f2:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <i+0x1>
  f6:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <i>
  fa:	05 97       	sbiw	r24, 0x05	; 5
  fc:	7c f2       	brlt	.-98     	; 0x9c <main+0x3c>
				_delay_ms(400);
			}
		}
		
		//Read the 4th light values (tab[3]) and display
		led  = pgm_read_byte(&tab[3]);
  fe:	e5 e2       	ldi	r30, 0x25	; 37
 100:	f0 e0       	ldi	r31, 0x00	; 0
 102:	e4 91       	lpm	r30, Z
 104:	8e 2f       	mov	r24, r30
 106:	90 e0       	ldi	r25, 0x00	; 0
 108:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__data_start+0x1>
 10c:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__data_start>
		PORTB = ~led;
 110:	e0 95       	com	r30
 112:	e8 bb       	out	0x18, r30	; 24
 114:	2f ef       	ldi	r18, 0xFF	; 255
 116:	87 ea       	ldi	r24, 0xA7	; 167
 118:	91 e6       	ldi	r25, 0x61	; 97
 11a:	21 50       	subi	r18, 0x01	; 1
 11c:	80 40       	sbci	r24, 0x00	; 0
 11e:	90 40       	sbci	r25, 0x00	; 0
 120:	e1 f7       	brne	.-8      	; 0x11a <main+0xba>
 122:	00 c0       	rjmp	.+0      	; 0x124 <main+0xc4>
 124:	00 00       	nop
		
		//4 second delay
		_delay_ms(4000);
		
		//Loop through second set of light changes 5 times
		for (i = 0; i < 5; i++){
 126:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <i+0x1>
 12a:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <i>
			
			//Loop through 5th & 6th light values 
			for (j = 0; j < 2; j++){
 12e:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <__data_end+0x1>
 132:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <__data_end>
 136:	e0 e0       	ldi	r30, 0x00	; 0
 138:	f0 e0       	ldi	r31, 0x00	; 0
				led = pgm_read_byte(&tab[j+4]);
 13a:	ea 5d       	subi	r30, 0xDA	; 218
 13c:	ff 4f       	sbci	r31, 0xFF	; 255
 13e:	e4 91       	lpm	r30, Z
 140:	8e 2f       	mov	r24, r30
 142:	90 e0       	ldi	r25, 0x00	; 0
 144:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__data_start+0x1>
 148:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__data_start>
				PORTB = ~led;
 14c:	e0 95       	com	r30
 14e:	e8 bb       	out	0x18, r30	; 24
 150:	2f ef       	ldi	r18, 0xFF	; 255
 152:	83 ec       	ldi	r24, 0xC3	; 195
 154:	99 e0       	ldi	r25, 0x09	; 9
 156:	21 50       	subi	r18, 0x01	; 1
 158:	80 40       	sbci	r24, 0x00	; 0
 15a:	90 40       	sbci	r25, 0x00	; 0
 15c:	e1 f7       	brne	.-8      	; 0x156 <main+0xf6>
 15e:	00 c0       	rjmp	.+0      	; 0x160 <main+0x100>
 160:	00 00       	nop
		
		//Loop through second set of light changes 5 times
		for (i = 0; i < 5; i++){
			
			//Loop through 5th & 6th light values 
			for (j = 0; j < 2; j++){
 162:	e0 91 62 00 	lds	r30, 0x0062	; 0x800062 <__data_end>
 166:	f0 91 63 00 	lds	r31, 0x0063	; 0x800063 <__data_end+0x1>
 16a:	31 96       	adiw	r30, 0x01	; 1
 16c:	f0 93 63 00 	sts	0x0063, r31	; 0x800063 <__data_end+0x1>
 170:	e0 93 62 00 	sts	0x0062, r30	; 0x800062 <__data_end>
 174:	e2 30       	cpi	r30, 0x02	; 2
 176:	f1 05       	cpc	r31, r1
 178:	04 f3       	brlt	.-64     	; 0x13a <main+0xda>
		
		//4 second delay
		_delay_ms(4000);
		
		//Loop through second set of light changes 5 times
		for (i = 0; i < 5; i++){
 17a:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <i>
 17e:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <i+0x1>
 182:	01 96       	adiw	r24, 0x01	; 1
 184:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <i+0x1>
 188:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <i>
 18c:	05 97       	sbiw	r24, 0x05	; 5
 18e:	7c f2       	brlt	.-98     	; 0x12e <main+0xce>
			}
		}
		
		return 0;
    }
}
 190:	80 e0       	ldi	r24, 0x00	; 0
 192:	90 e0       	ldi	r25, 0x00	; 0
 194:	08 95       	ret

00000196 <_exit>:
 196:	f8 94       	cli

00000198 <__stop_program>:
 198:	ff cf       	rjmp	.-2      	; 0x198 <__stop_program>
